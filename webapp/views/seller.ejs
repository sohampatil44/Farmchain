<!DOCTYPE html>
<html lang="en" id="html">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title data-en="Seller Dashboard" data-mr="‡§µ‡§ø‡§ï‡•ç‡§∞‡•á‡§§‡§æ ‡§°‡•Ö‡§∂‡§¨‡•ã‡§∞‡•ç‡§°">Seller Dashboard</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&family=Noto+Serif+Devanagari:wght@400;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="/css/speech.css">
  <style>
    body { font-family: 'Inter', sans-serif; }
    [lang="mr"] { font-family: 'Noto Serif Devanagari', sans-serif; }
    .modal { display: none; position: fixed; z-index: 1; left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: rgba(0,0,0,0.4); }
    .modal-content { background-color: #fefefe; margin: 15% auto; padding: 20px; border: 1px solid #888; width: 80%; max-width: 600px; }
    .close { color: #aaa; float: right; font-size: 28px; font-weight: bold; }
    .close:hover, .close:focus { color: black; text-decoration: none; cursor: pointer; }
  </style>
</head>
<body class="bg-gray-100 min-h-screen">

<!-- Speech Controls -->
<div id="speech-controls" class="speech-controls">
  <div class="text-sm font-semibold mb-2" data-en="Text-to-Speech" data-mr="‡§Æ‡§ú‡§ï‡•Ç‡§∞-‡§§‡•á-‡§≠‡§æ‡§∑‡§£">Text-to-Speech</div>
  <button id="stop-speech" class="speech-btn" data-en="Stop" data-mr="‡§•‡§æ‡§Ç‡§¨‡§µ‡§æ">Stop</button>
  <button id="pause-speech" class="speech-btn" data-en="Pause" data-mr="‡§µ‡§ø‡§∞‡§æ‡§Æ">Pause</button>
  <button id="resume-speech" class="speech-btn" data-en="Resume" data-mr="‡§™‡•Å‡§®‡•ç‡§π‡§æ ‡§∏‡•Å‡§∞‡•Ç">Resume</button>
</div>

<div class="max-w-5xl mx-auto py-10 px-4">

  <!-- Language Switcher -->
  <div class="flex justify-between items-center mb-4">
    <button 
      onclick="refreshListings()" 
      class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg text-sm"
      title="Refresh to see latest changes">
      üîÑ Refresh
    </button>
    <div>
      <button type="button" class="lang-btn active" onclick="window.FarmChainSpeech.setLanguage('en')" data-lang="en">English</button>
      <button type="button" class="lang-btn" onclick="window.FarmChainSpeech.setLanguage('mr')" data-lang="mr">‡§Æ‡§∞‡§æ‡§†‡•Ä</button>
    </div>
  </div>

  <h1 class="text-3xl font-bold text-emerald-700 mb-8 text-center speakable" data-en="Seller Dashboard" data-mr="‡§µ‡§ø‡§ï‡•ç‡§∞‡•á‡§§‡§æ ‡§°‡•Ö‡§∂‡§¨‡•ã‡§∞‡•ç‡§°">
    Seller Dashboard
  </h1>

  <h2 class="text-lg mb-6 speakable" data-en="Welcome, <%= sellerName %>!" data-mr="‡§Ü‡§™‡§≤‡•á ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§Ü‡§π‡•á, <%= sellerName %>!">
    Welcome, <%= sellerName %>!
  </h2>

  <!-- Success/Error Messages -->
  <div id="message" class="hidden mb-4 p-4 rounded"></div>

  <!-- Add New Listing Form -->
  <form action="/seller/add" method="POST" enctype="multipart/form-data" class="bg-white p-6 rounded-2xl shadow-lg mb-10">
    <h2 class="text-xl font-semibold text-gray-800 mb-4 speakable" data-en="Add New Listing" data-mr="‡§®‡§µ‡•Ä‡§® ‡§Ø‡§Ç‡§§‡•ç‡§∞‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§ú‡•ã‡§°‡§æ">
      Add New Listing
    </h2>
    <div class="grid sm:grid-cols-2 gap-4">
      <input type="text" name="sellerName" placeholder="Seller Name" class="border p-3 rounded-lg focus:ring-2 focus:ring-emerald-400 focus:outline-none" required>
      <input type="text" name="name" placeholder="Equipment Name" class="border p-3 rounded-lg focus:ring-2 focus:ring-emerald-400 focus:outline-none" required>
      <select name="category" class="border p-3 rounded-lg focus:ring-2 focus:ring-emerald-400 focus:outline-none" required>
        <% CATEGORIES.forEach(c => { %>
          <option value="<%= c %>"><%= CATEGORY_TRANSLATIONS[c] || c %></option>
        <% }) %>
      </select>
      <select name="region" class="border p-3 rounded-lg focus:ring-2 focus:ring-emerald-400 focus:outline-none" required>
        <% REGIONS.forEach(r => { %>
          <option value="<%= r %>"><%= r %></option>
        <% }) %>
      </select>
      <input type="number" id="pricePerDay" name="pricePerDay" placeholder="Price per day (‚Çπ)" class="border p-3 rounded-lg focus:ring-2 focus:ring-emerald-400 focus:outline-none" required>
      <p id="priceError" class="text-red-500 text-sm mt-1"></p>
      <input type="number" name="ageInYears" placeholder="Age of machinery (in years)" min="0" class="border p-3 rounded-lg focus:ring-2 focus:ring-emerald-400 focus:outline-none" required>
      <input type="file" name="img" accept="image/*" class="border p-3 col-span-2 rounded-lg focus:ring-2 focus:ring-emerald-400 focus:outline-none">
    </div>
    <button type="submit" class="mt-4 bg-emerald-600 hover:bg-emerald-700 text-white font-semibold px-6 py-2 rounded-xl transition duration-300 speakable" data-en="Add Listing" data-mr="‡§Ø‡§Ç‡§§‡•ç‡§∞ ‡§ú‡•ã‡§°‡§æ">
      Add Listing
    </button>
  </form>

  <!-- Seller Listings -->
  <div class="flex items-center justify-between mb-4">
    <h2 class="text-2xl font-semibold text-gray-800 speakable" data-en="Your Listings" data-mr="‡§Ü‡§™‡§≤‡•Ä ‡§Ø‡§Ç‡§§‡•ç‡§∞‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä">
      Your Listings
    </h2>
    <div class="text-sm text-gray-600">
      Total: <span id="listings-count"><%= listings ? listings.length : 0 %></span> machines
    </div>
  </div>
  
  <div id="listings-container" class="grid sm:grid-cols-2 md:grid-cols-3 gap-6">
    <% if (listings && listings.length) { %>
      <% listings.forEach(l => { 
           const imgUrl = l.img && l.img.trim() !== "" ? l.img : "https://via.placeholder.com/300x150"; 
      %>
        <div class="listing-card bg-white p-4 rounded-2xl shadow hover:shadow-xl transition duration-300 flex flex-col" data-listing-id="<%= l.onChainId %>">
          <div class="w-full h-40 bg-cover bg-center rounded-xl mb-4" style="background-image: url('<%= imgUrl %>');"></div>
          <div class="flex-1">
            <h3 class="font-bold text-lg text-gray-700 speakable"><%= l.name %></h3>
            <p class="text-sm text-gray-500 mb-1 speakable">
              <%= CATEGORY_TRANSLATIONS[l.category] || l.category %> ‚Ä¢ <%= l.region %>
            </p>
            <p class="text-sm text-gray-600 font-medium speakable">‚Çπ<%= l.pricePerDay %>/day</p>
            <p class="text-sm text-gray-500 mt-1 speakable">Seller: <%= l.sellerName || sellerName %></p>
            <p class="text-sm text-gray-500 mt-1 speakable">Age: <%= l.ageInYears %> years</p>
          </div>
          <span class="mt-2 inline-block px-3 py-1 text-xs font-semibold rounded-full <%= l.status === 'approved' ? 'bg-emerald-100 text-emerald-700' : (l.status === 'declined' ? 'bg-red-100 text-red-700' : 'bg-yellow-100 text-yellow-700') %> speakable">
            <%= l.status %>
          </span>
        </div>
      <% }) %>
    <% } else { %>
      <p class="col-span-full text-gray-500 text-center speakable" data-en="No listings available." data-mr="‡§ï‡•ã‡§£‡§§‡•Ä‡§π‡•Ä ‡§Ø‡§Ç‡§§‡•ç‡§∞‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§®‡§æ‡§π‡•Ä.">
        No listings available.
      </p>
    <% } %>
  </div>

  <!-- Orders Panel -->
  <div class="mt-12">
    <h2 class="text-2xl font-semibold text-gray-800 mb-4 speakable" data-en="Your Orders" data-mr="‡§Ü‡§™‡§≤‡•ç‡§Ø‡§æ ‡§ë‡§∞‡•ç‡§°‡§∞‡•ç‡§∏">
      Your Orders
    </h2>
    <% if (orders && orders.length > 0) { %>
      <div class="grid sm:grid-cols-2 md:grid-cols-3 gap-6">
        <% orders.forEach(function(order) { %>
          <div class="bg-white p-4 rounded-2xl shadow hover:shadow-xl transition flex flex-col">
            <h3 class="font-bold text-lg text-gray-700 mb-1 speakable">Order for <%= order.listing.name %></h3>
            <p class="text-sm text-gray-500 mb-1 speakable">From: <%= order.farmer.name %></p>
            <p class="text-sm text-gray-600 font-medium mb-2 speakable">Amount: ‚Çπ<%= order.amount %></p>
            <button onclick="showOrderDetails('<%= JSON.stringify(order) %>')" class="bg-emerald-600 hover:bg-emerald-700 text-white px-3 py-1 rounded transition speakable" data-en="View Details" data-mr="‡§§‡§™‡§∂‡•Ä‡§≤ ‡§™‡§π‡§æ">
              View Details
            </button>
          </div>
        <% }) %>
      </div>
    <% } else { %>
      <div class="text-center py-8">
        <p class="text-gray-500 speakable" data-en="No orders yet" data-mr="‡§ï‡•ã‡§£‡§§‡•Ä‡§π‡•Ä ‡§ë‡§∞‡•ç‡§°‡§∞‡•ç‡§∏ ‡§®‡§æ‡§π‡•Ä‡§§">No orders yet</p>
      </div>
    <% } %>
  </div>

  <!-- Modal for Order Details -->
  <div id="orderModal" class="modal">
    <div class="modal-content">
      <span class="close" onclick="document.getElementById('orderModal').style.display='none'">&times;</span>
      <h2 class="text-xl font-bold mb-4 speakable" data-en="Order Details" data-mr="‡§ë‡§∞‡•ç‡§°‡§∞ ‡§§‡§™‡§∂‡•Ä‡§≤">Order Details</h2>
      <p id="orderDetails" class="text-gray-700"></p>
    </div>
  </div>
</div>

<script src="/js/speech.js"></script>
<script>
  // Initialize speech functionality when page loads
  document.addEventListener('DOMContentLoaded', function() {
    window.FarmChainSpeech.setLanguage('en');
  });

  // Price validation logic
  const priceInput = document.getElementById("pricePerDay");
  const equipmentInput = document.querySelector("input[name='name']");
  const priceError = document.getElementById("priceError");

  let timeout = null;

  priceInput.addEventListener("input", () => {
    clearTimeout(timeout);
    timeout = setTimeout(() => {
      const price = priceInput.value;
      const equipment = equipmentInput.value;

      if (!price || !equipment) {
        priceError.textContent = "";
        return;
      }

      fetch("/seller/validate-price", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ equipment, price })
      })
      .then(res => res.json())
      .then(data => {
        if (!data.valid) {
          priceError.textContent = data.message;
        } else {
          priceError.textContent = "";
        }
      })
      .catch(err => {
        priceError.textContent = "Error validating price";
      });
    }, 500); // debounce 0.5s
  });

  // Refresh listings
  function refreshListings() {
    const refreshBtn = document.querySelector('[onclick="refreshListings()"]');
    refreshBtn.disabled = true;
    refreshBtn.textContent = 'üîÑ Refreshing...';

    fetch('/seller/refresh', {
      method: 'GET',
      credentials: 'include'
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        showMessage(`Updated! You have ${data.count} listings.`, 'success');
        
        // Update the count
        document.getElementById('listings-count').textContent = data.count;
        
        // If there are differences, reload the page to show updated content
        const currentCards = document.querySelectorAll('.listing-card').length;
        if (currentCards !== data.count) {
          setTimeout(() => {
            window.location.reload();
          }, 1000);
        }
      } else {
        showMessage('Error refreshing listings', 'error');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      showMessage('Error refreshing listings', 'error');
    })
    .finally(() => {
      refreshBtn.disabled = false;
      refreshBtn.textContent = 'üîÑ Refresh';
    });
  }

  function showMessage(text, type) {
    const messageDiv = document.getElementById('message');
    messageDiv.textContent = text;
    messageDiv.className = `mb-4 p-4 rounded ${type === 'success' ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700'}`;
    messageDiv.classList.remove('hidden');
    
    // Hide message after 3 seconds
    setTimeout(() => {
      messageDiv.classList.add('hidden');
    }, 3000);
  }

  // Auto-refresh every 30 seconds to catch admin deletions
  setInterval(() => {
    fetch('/seller/refresh', {
      method: 'GET',
      credentials: 'include'
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        const currentCount = document.querySelectorAll('.listing-card').length;
        const newCount = data.count;
        
        if (currentCount !== newCount) {
          console.log(`Listings changed: ${currentCount} -> ${newCount}`);
          showMessage('Your listings have been updated by admin', 'info');
          
          // Reload page after 2 seconds to show changes
          setTimeout(() => {
            window.location.reload();
          }, 2000);
        }
      }
    })
    .catch(error => {
      console.log('Background refresh failed:', error);
    });
  }, 30000); // Check every 30 seconds

  function showOrderDetails(orderJson) {
    const order = JSON.parse(orderJson);
    const details = `
      Booking ID: ${order._id}<br>
      Farmer: ${order.farmer.name} (${order.farmer.email})<br>
      Listing: ${order.listing.name} (Category: ${order.listing.category}, Region: ${order.listing.region})<br>
      Days: ${(new Date(order.to) - new Date(order.from)) / 86400000}<br>
      Amount: ‚Çπ${order.amount}<br>
      Tx Hash: ${order.txHash}<br>
      Date: ${new Date(order.createdAt).toLocaleString()}
    `;
    document.getElementById('orderDetails').innerHTML = details;
    document.getElementById('orderModal').style.display = "block";
  }
</script>
</body>
</html>
```



<xaiArtifact artifact_id="a1d5538f-dad0-4fc2-9e1c-0a3f0645f72b" artifact_version_id="f5ed5ee4-71e2-4ed9-b9ba-92c51778b963" title="seller.js" contentType="text/javascript">